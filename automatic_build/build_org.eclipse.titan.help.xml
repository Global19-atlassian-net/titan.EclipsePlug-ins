<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--
 Copyright (c) 2000-2019 Ericsson Telecom AB

 All rights reserved. This program and the accompanying materials
 are made available under the terms of the Eclipse Public License v2.0
 which accompanies this distribution, and is available at
 https://www.eclipse.org/org/documents/epl-2.0/EPL-2.0.html
 -->
<project basedir="." default="build" name="org.eclipse.titan.help"
	xmlns:if="ant:if" xmlns:unless="ant:unless">

	<import file="build_import.xml"/>

	<target name="build" depends="build.pdf,build.online.help,build.standards" />

	<target name="build.jars" depends="build">
		<mkdir dir="${result.dir}/plugins"/>
		<update.manifest file="${build.dir}/${help.name}/META-INF/MANIFEST.MF"/>
		<jar destfile="${result.dir}/plugins/org.eclipse.titan.help_${version.qualifier}.jar"
			 manifest="${build.dir}/${help.name}/META-INF/MANIFEST.MF">
			<fileset dir="." />
		</jar>
	</target>

	<target name="check.asciidoctor">
		<property environment="env" /> 
		<available file="asciidoctor-pdf" filepath="${env.PATH}" property="asciidoctor.present"/>
	</target>

	<!--
	  Builds pdf files from the adoc files.
	  If asciidoctor is available, pdf files are created or build stops with error if something went wrong.
	  If asciidoctor is NOT available, pdf creation is omitted and build continues without error.
	-->
	<target name="build.pdf" depends="check.asciidoctor" if="asciidoctor.present">
		<build.usrguide usrguide.adoc="${compiler.location}/usrguide/installationguide/installationguide.adoc"/>
		<build.usrguide usrguide.adoc="${compiler.location}/usrguide/apiguide/README.adoc"/>
		<build.usrguide usrguide.adoc="${compiler.location}/usrguide/PRI/PRI.adoc"/>
		<build.usrguide usrguide.adoc="${compiler.location}/usrguide/referenceguide/ReferenceGuide.adoc"/>
		<build.usrguide usrguide.adoc="${compiler.location}/usrguide/java_referenceguide/JavaReferenceGuide.adoc"/>
		<build.usrguide usrguide.adoc="${compiler.location}/usrguide/SoC_XML_TITAN/SoC_XML_TITAN.adoc"/>
		<build.usrguide usrguide.adoc="${compiler.location}/usrguide/releasenotes/releasenotes.adoc"/>
		<build.usrguide usrguide.adoc="${compiler.location}/usrguide/SoC_TITAN/SoC_TITAN.adoc"/>
		<build.usrguide usrguide.adoc="${compiler.location}/usrguide/userguide/UserGuide.adoc"/>
		<build.usrguide usrguide.adoc="${compiler.location}/titan_executor_api/doc/Titan_Executor_API_User_Guide.adoc"/>

		<build.usrguide usrguide.adoc="${usrguide.eclipse.dir}/org.eclipse.titan.designer/docs/Eclipse_Designer_userguide/DesignerUserGuide.adoc"/>
		<build.usrguide usrguide.adoc="${usrguide.eclipse.dir}/org.eclipse.titan.executor/docs/Eclipse_Executor_userguide/ExecutorUserGuide.adoc"/>
		<build.usrguide usrguide.adoc="${usrguide.eclipse.dir}/org.eclipse.titan.help/docs/Eclipse_installationguide/Eclipse_installationguide.adoc"/>
		<build.usrguide usrguide.adoc="${usrguide.eclipse.dir}/org.eclipse.titanium/docs/Titanium_Description/Titanium_Description.adoc"/>
		<build.usrguide usrguide.adoc="${usrguide.eclipse.dir}/org.eclipse.titanium/docs/Titanium_referenceguide/Titanium_referenceguide.adoc"/>
		<build.usrguide usrguide.adoc="${usrguide.eclipse.dir}/org.eclipse.titanium.regressiontests/docs/test_documentation/test_documentation.adoc"/>
		<build.usrguide usrguide.adoc="${usrguide.eclipse.dir}/org.eclipse.titanium.regressiontests/docs/TechnicalDetailsOfCodeSmells/TechnicalDetailsOfCodeSmells.adoc"/>
		<build.usrguide usrguide.adoc="${usrguide.eclipse.dir}/org.eclipse.titanium.refactoring/docs/Titanium_Refactoring_Description/Titanium_Refactoring_Description.adoc"/>
	</target>
	
	<target name="build.standards">
		<copy todir="${build.dir}/${help.name}/docs">
			<fileset dir="${online.help.dir}/docs">
				<include name="*.pdf"/>
			</fileset>
		</copy>
	</target>
	
	<target name="build.online.help">
		<copy todir="${build.dir}/${help.name}">
			<fileset dir="${online.help.dir}">
				<include name="*.html"/>
			</fileset>
		</copy>

		<copy todir="${build.dir}/${help.name}/images">
			<fileset dir="${online.help.dir}/images">
				<include name="**/*"/>
				<exclude name="**/.gitignore"/>
			</fileset>
		</copy>

		<copy todir="${build.dir}/${help.name}/info">
			<fileset dir="${online.help.dir}/info">
				<include name="**/*"/>
				<exclude name="**/.gitignore"/>
			</fileset>
		</copy>
	</target>

	<macrodef name="build.usrguide">
		<attribute name="usrguide.adoc"/>
		<sequential>
			<log message="-> build.usrguide( @{usrguide.adoc} )"/>
			<condition property="build.help.true">
				<istrue value="${build.help}" />
			</condition>
			<log message="build.help = ${build.help}"/>
			<log message="build.help.true = ${build.help.true}"/>
			<sequential if:set="build.help.true">
				<build.usrguide.if.build.help
					usrguide.adoc="@{usrguide.adoc}" />
			</sequential>
		</sequential>
	</macrodef>

	<macrodef name="build.usrguide.if.build.help">
		<attribute name="usrguide.adoc"/>
		<sequential>
			<log message="-> build.usrguide.if.build.help( @{usrguide.adoc} )"/>
			<echo message="Creating userguide pdf from adoc file: @{usrguide.adoc}"/>

			<!-- Create pdf file name from doc filename -->
			<!-- result will be written in ${usrguide.pdf}, the input @{usrguide.adoc} is left untouched -->
			<local name="usrguide.pdf"/>
			<exec executable="sed" inputstring="@{usrguide.adoc}" outputproperty="usrguide.pdf">
				<arg value="s/\.adoc$/\.pdf/g"/>
			</exec>
			<log message="usrguide.adoc = @{usrguide.adoc}"/>
			<log message="usrguide.pdf = ${usrguide.pdf}"/>

			<adoc2pdf adocFile="@{usrguide.adoc}" />

			<copy file="${usrguide.pdf}" todir="${build.dir}/${help.name}/docs"/>
		</sequential>
	</macrodef>

	<!--
	    Converts adoc file to pdf, new file is created in the same directory
            @param adocFile the adoc filename with full path
	-->
	<macrodef name="adoc2pdf">
		<attribute name="adocFile"/>
		<sequential>
			<log message="-> adoc2pdf( @{adocFile} )"/>
			<exec executable="asciidoctor-pdf">
				<arg value="--attribute"/>
				<arg value="skip-front-matter"/>
				<arg value="@{adocFile}"/>
			</exec>
		</sequential>
	</macrodef>

	<target name="clean">
		<delete dir="bin"/>
	</target>

	<target depends="clean" name="cleanall"/>
</project>
