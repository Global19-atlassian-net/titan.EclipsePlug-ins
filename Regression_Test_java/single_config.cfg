[MODULE_PARAMETERS]
# This section shall contain the values of all parameters that are defined in your TTCN-3 modules.

[EXECUTE]
#==all from:==
all_from_complement
all_from_permutation
all_from_subrefs
all_from_subset
all_from_subtype
all_from_superset
all_from_var
#all_from_with_functions #TODO: JSON enc-dec function handling, put into single_bugs.cfg
all_from
sapc.control
#everything - no control part, TODO: repair the test, rework the whole! It was just a sketch.
#
#json (There are testcases commented out in it!! In preinit of JsonTypes it stops with exception)
#AttributeTestcases.control
#JsonTestcases.control

#predefFunctions
bit_to_OK.control
bit_to_SW.control
char_to_OK.control
char_to_SW.control
#encdec_OK #BER encoding, JSON encoding, copied into single_bugs
enum_to_OK.control
enum_to_SW.control
float_to_OK.control
float_to_SW.control
hex_to_OK.control
hex_to_SW.control
int_to_OK.control
int_to_SW.control
isprecho_OK.control
length_of_OK
length_of_SW
oct_to_OK.control
oct_to_SW.control
replacer_OK.control
replacer_SW.control
rotter_OK.control
rotter_SW.control
shifty_OK.control
shifty_SW.control
size_of_OK.control
size_of_SW.control
str_to_OK.control
str_to_SW.control
sub_str_OK.control
sub_str_SW.control
tcname_OK.control
tcname_SW.control

### RAW ###
Annex_E_variants.control
Bug521125.control
Bug522656.control
Bug546231.control  
Bug547385.control
CSN1_LH.control
gtpctest.control
Lengthto_Offset.control
#RAW/Examples:
RAW_Test.control
#RAW/ForceOmit
ForceOmit
#RAW/HN25015
HN25015.control 
#RAW/HQ49956:
Test.control
#RAW/HS16977_Test
HS16977_Test.control
#RAW/IntX
IntX.control #ok! 6 pass
#RAW/Lengthto_Offset
Lengthto_Offset
#RAW/RAW_bitstring_test
RAW_bitstring_test
#RAW/RAW_integer_test
RAW_integer_test
#RAW/ustr
ustr.control
RAWCodingAttributes.control
#################

#functions.control
TtemplateAnytype.control
TtemplateInt.control
TintOper.control
TtemplateFloat.control
TbasicStatem.control
TtemplateChar.control
#tryCatch_Functions.control
TtemplateBool.control
TcharOper.control
TcontrolTimer.control
TrecofOper.control
SelectUnion.control
TtemplateEnum.control
TcharstrOper.control
TtemplateRec.control
TassignmentNotation.control
IsTemplateKind.control
ExclusiveRangeTemplate.control
TtemplateBitstr.control
TucharstrOper.control
TsetofMatch.control
ThexstrOper.control
TunionOper.control
TrecordOper.control
TenumOper.control
TanytypeOper.control
TfloatOper.control
TbitstrOper.control

TobjidOper.control
#imported_templates.control
TsetOper.control
TtemplateSetof.control
TboolOper.control
ToctetstrOper.control
TfloatOperSpecial.control
FuncRef.control
TtemplateUnion.control
TarrayOper.control
#everything.control
#types.control
TdefaultOper.control
TlostTimer.control
#TtemplateRecAsn.control
TtemplateSet.control
TtemplateRecof.control
#ASN_Definitions.control
TanytypeWrapOper.control
#ImportedTemplates.control
TsetofOper.control

[LOGGING]
# In this section you can specify the name of the log file and the classes of events
# you want to log into the file or display on console (standard error).

LogFile := "logs/%e.%h-%r.%s"
FileMask := LOG_ALL #|TESTCASE | STATISTICS #|LOG_ALL #| DEBUG | MATCHING
ConsoleMask := ERROR | WARNING | TESTCASE | STATISTICS #| PORTEVENT | USER
LogSourceInfo := Yes
AppendFile := No
TimeStampFormat := Time
LogEventTypes := No
SourceInfoFormat := Single
LogEntityName := Yes

